{"version":3,"sources":["components/Navigation/index.js","components/Table/TableView/index.js","data/index.js","components/Table/index.js","components/Tips/index.js","components/Tabs/index.js","components/App.js","index.js"],"names":["Navigation","Navbar","color","light","Container","NavbarBrand","Nav","className","navbar","NavItem","NavLink","target","href","TableView","columns","data","useTable","initialState","sortBy","id","desc","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","align","responsive","striped","hover","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","name","url","pattern","difficulty","companies","Table","React","useMemo","questionList","Header","accessor","Cell","cellInfo","original","disableSortBy","Badge","toLowerCase","pill","Col","Row","Tips","source","Tabs","useState","activeTab","setActiveTab","toggle","tab","tabs","classnames","active","onClick","TabContent","TabPane","tabId","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ddaa9e69.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Container,\n  Nav,\n  Navbar,\n  NavbarBrand,\n  NavLink,\n  NavItem,\n} from 'reactstrap';\nimport { FaGithub } from 'react-icons/fa';\n\nimport './styles.scss';\n\nconst Navigation = () => {\n  return (\n    <Navbar color=\"light\" light>\n      <Container>\n        <NavbarBrand>Leetcode Patterns</NavbarBrand>\n        <Nav className=\"ml-auto\" navbar>\n          <NavItem>\n            <NavLink\n              target=\"_blank\"\n              href=\"https://github.com/SeanPrashad/leetcode-patterns\"\n            >\n              <FaGithub />\n            </NavLink>\n          </NavItem>\n        </Nav>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport { Table } from 'reactstrap';\nimport { useTable, useSortBy } from 'react-table';\nimport { FaSortAlphaUp, FaSortAlphaDown } from 'react-icons/fa';\n\nfunction TableView({ columns, data }) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: {\n        sortBy: [{ id: 'pattern', desc: false }],\n      },\n    },\n    useSortBy,\n  );\n\n  return (\n    <Table align=\"center\" responsive striped hover {...getTableProps()}>\n      <thead>\n        {headerGroups.map(headerGroup => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map(column => (\n              <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                {column.render('Header')}\n                <span>\n                  {' '}\n                  {column.isSorted ? (\n                    column.isSortedDesc ? (\n                      <FaSortAlphaUp />\n                    ) : (\n                      <FaSortAlphaDown />\n                    )\n                  ) : (\n                    ''\n                  )}\n                </span>\n              </th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n\n      <tbody {...getTableBodyProps()}>\n        {rows.map(row => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map(cell => {\n                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>;\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  );\n}\n\nexport default TableView;\n","export default [\n  {\n    name: 'Contains Duplicate',\n    url: 'https://leetcode.com/problems/contains-duplicate/',\n    pattern: 'Arrays',\n    difficulty: 'Easy',\n    companies: [],\n  },\n  {\n    name: 'Missing Number',\n    url: 'https://leetcode.com/problems/missing-number/',\n    pattern: 'Arrays',\n    difficulty: 'Easy',\n    companies: [],\n  },\n  {\n    name: 'Find All Numbers Disappeared in an Array',\n    url:\n      'https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array/',\n    pattern: 'Arrays',\n    difficulty: 'Easy',\n    companies: [],\n  },\n  {\n    name: 'Single Number',\n    url: 'https://leetcode.com/problems/single-number/',\n    pattern: 'Arrays',\n    difficulty: 'Easy',\n    companies: [],\n  },\n  {\n    name: 'Product of Array Except Self',\n    url: 'https://leetcode.com/problems/product-of-array-except-self/',\n    pattern: 'Arrays',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Find the Duplicate Number',\n    url: 'https://leetcode.com/problems/find-the-duplicate-number/',\n    pattern: 'Arrays',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Find All Duplicates in an Array',\n    url: 'https://leetcode.com/problems/find-all-duplicates-in-an-array/',\n    pattern: 'Arrays',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Set Matrix Zeroes',\n    url: 'https://leetcode.com/problems/set-matrix-zeroes/',\n    pattern: 'Arrays',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Spiral Matrix',\n    url: 'https://leetcode.com/problems/spiral-matrix/',\n    pattern: 'Arrays',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Rotate Image',\n    url: 'https://leetcode.com/problems/rotate-image/',\n    pattern: 'Arrays',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Word Search',\n    url: 'https://leetcode.com/problems/word-search/',\n    pattern: 'Arrays',\n    difficulty: 'Medium',\n    companies: [],\n  },\n\n  {\n    name: 'First Missing Positive',\n    url: 'https://leetcode.com/problems/first-missing-positive/',\n    pattern: 'Arrays',\n    difficulty: 'Hard',\n    companies: [],\n  },\n  {\n    name: 'Longest Consecutive Sequence',\n    url: 'https://leetcode.com/problems/longest-consecutive-sequence/',\n    pattern: 'Arrays',\n    difficulty: 'Hard',\n    companies: [],\n  },\n\n  {\n    name: 'Letter Case Permutation',\n    url: 'https://leetcode.com/problems/letter-case-permutation/',\n    pattern: 'Backtracking',\n    difficulty: 'Easy',\n    companies: [],\n  },\n  {\n    name: 'Subsets',\n    url: 'https://leetcode.com/problems/subsets/',\n    pattern: 'Backtracking',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Subsets II',\n    url: 'https://leetcode.com/problems/subsets-ii/',\n    pattern: 'Backtracking',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Permutations',\n    url: 'https://leetcode.com/problems/permutations/',\n    pattern: 'Backtracking',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Permutations II',\n    url: 'https://leetcode.com/problems/permutations-ii/',\n    pattern: 'Backtracking',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Combinations',\n    url: 'https://leetcode.com/problems/combinations/',\n    pattern: 'Backtracking',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Combination Sum',\n    url: 'https://leetcode.com/problems/combination-sum/',\n    pattern: 'Backtracking',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Combination Sum II',\n    url: 'https://leetcode.com/problems/combination-sum-ii/',\n    pattern: 'Backtracking',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Combination Sum III',\n    url: 'https://leetcode.com/problems/combination-sum-iii/',\n    pattern: 'Backtracking',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Generate Parentheses',\n    url: 'https://leetcode.com/problems/generate-parentheses/',\n    pattern: 'Backtracking',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Target Sum',\n    url: 'https://leetcode.com/problems/target-sum/',\n    pattern: 'Backtracking',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Palindrome Partitioning',\n    url: 'https://leetcode.com/problems/palindrome-partitioning/',\n    pattern: 'Backtracking',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Letter Combinations of a Phone Number',\n    url: 'https://leetcode.com/problems/letter-combinations-of-a-phone-number/',\n    pattern: 'Backtracking',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Generalized Abbreviation',\n    url: 'https://leetcode.com/problems/generalized-abbreviation/',\n    pattern: 'Backtracking',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Sudoku Solver',\n    url: 'https://leetcode.com/problems/sudoku-solver/',\n    pattern: 'Backtracking',\n    difficulty: 'Hard',\n    companies: [],\n  },\n  {\n    name: 'N-Queens',\n    url: 'https://leetcode.com/problems/n-queens/',\n    pattern: 'Backtracking',\n    difficulty: 'Hard',\n    companies: [],\n  },\n  {\n    name: 'Climbing Stairs',\n    url: 'https://leetcode.com/problems/climbing-stairs/',\n    pattern: 'Dynamic Programming',\n    difficulty: 'Easy',\n    companies: [],\n  },\n  {\n    name: 'House Robber',\n    url: 'https://leetcode.com/problems/house-robber/',\n    pattern: 'Dynamic Programming',\n    difficulty: 'Easy',\n    companies: [],\n  },\n  {\n    name: 'Best Time to Buy and Sell Stock',\n    url: 'https://leetcode.com/problems/best-time-to-buy-and-sell-stock/',\n    pattern: 'Dynamic Programming',\n    difficulty: 'Easy',\n    companies: [],\n  },\n  {\n    name: 'Maximum Subarray',\n    url: 'https://leetcode.com/problems/maximum-subarray/',\n    pattern: 'Dynamic Programming',\n    difficulty: 'Easy',\n    companies: [],\n  },\n  {\n    name: 'Range Sum Query - Immutable',\n    url: 'https://leetcode.com/problems/range-sum-query-immutable/',\n    pattern: 'Dynamic Programming',\n    difficulty: 'Easy',\n    companies: [],\n  },\n  {\n    name: 'House Robber II',\n    url: 'https://leetcode.com/problems/house-robber-ii/',\n    pattern: 'Dynamic Programming',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Coin Change',\n    url: 'https://leetcode.com/problems/coin-change/',\n    pattern: 'Dynamic Programming',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Maximum Product Subarray',\n    url: 'https://leetcode.com/problems/maximum-product-subarray/',\n    pattern: 'Dynamic Programming',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Longest Increasing Subsequence',\n    url: 'https://leetcode.com/problems/longest-increasing-subsequence/',\n    pattern: 'Dynamic Programming',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Longest Palindromic Substring',\n    url: 'https://leetcode.com/problems/longest-palindromic-substring/',\n    pattern: 'Dynamic Programming',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Word Break',\n    url: 'https://leetcode.com/problems/word-break/',\n    pattern: 'Dynamic Programming',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Combination Sum',\n    url: 'https://leetcode.com/problems/combination-sum-iv/',\n    pattern: 'Dynamic Programming',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Decode Ways',\n    url: 'https://leetcode.com/problems/decode-ways/',\n    pattern: 'Dynamic Programming',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Unique Paths',\n    url: 'https://leetcode.com/problems/unique-paths/',\n    pattern: 'Dynamic Programming',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Jump Game',\n    url: 'https://leetcode.com/problems/jump-game/',\n    pattern: 'Dynamic Programming',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Palindromic Substrings',\n    url: 'https://leetcode.com/problems/palindromic-substrings/',\n    pattern: 'Dynamic Programming',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Number of Longest Increasing Subsequence',\n    url:\n      'https://leetcode.com/problems/number-of-longest-increasing-subsequence/',\n    pattern: 'Dynamic Programming',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Partition Equal Subset Sum',\n    url: 'https://leetcode.com/problems/partition-equal-subset-sum/',\n    pattern: 'Dynamic Programming',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Partition to K Equal Sum Subsets',\n    url: 'https://leetcode.com/problems/partition-to-k-equal-sum-subsets/',\n    pattern: 'Dynamic Programming',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Best Time to Buy and Sell Stock with Cooldown',\n    url:\n      'https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/',\n    pattern: 'Dynamic Programming',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Counting Bits',\n    url: 'https://leetcode.com/problems/counting-bits/',\n    pattern: 'Dynamic Programming',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Linked List Cycle',\n    url: 'https://leetcode.com/problems/linked-list-cycle/',\n    pattern: 'Fast & Slow Pointers',\n    difficulty: 'Easy',\n    companies: [],\n  },\n  {\n    name: 'Middle of the Linked List',\n    url: 'https://leetcode.com/problems/middle-of-the-linked-list/',\n    pattern: 'Fast & Slow Pointers',\n    difficulty: 'Easy',\n    companies: [],\n  },\n  {\n    name: 'Palindrome Linked List',\n    url: 'https://leetcode.com/problems/palindrome-linked-list/',\n    pattern: 'Fast & Slow Pointers',\n    difficulty: 'Easy',\n    companies: [],\n  },\n  {\n    name: 'Remove Linked List Elements',\n    url: 'https://leetcode.com/problems/remove-linked-list-elements/',\n    pattern: 'Fast & Slow Pointers',\n    difficulty: 'Easy',\n    companies: [],\n  },\n  {\n    name: 'Remove Duplicates from Sorted List',\n    url: 'https://leetcode.com/problems/remove-duplicates-from-sorted-list/',\n    pattern: 'Fast & Slow Pointers',\n    difficulty: 'Easy',\n    companies: [],\n  },\n  {\n    name: 'Linked List Cycle II',\n    url: 'https://leetcode.com/problems/linked-list-cycle-ii/',\n    pattern: 'Fast & Slow Pointers',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Add Two Numbers',\n    url: 'https://leetcode.com/problems/add-two-numbers/',\n    pattern: 'Fast & Slow Pointers',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Remove Nth Node From End Of List',\n    url: 'https://leetcode.com/problems/remove-nth-node-from-end-of-list/',\n    pattern: 'Fast & Slow Pointers',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Sort List',\n    url: 'https://leetcode.com/problems/sort-list/',\n    pattern: 'Fast & Slow Pointers',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Reorder List',\n    url: 'https://leetcode.com/problems/reorder-list/',\n    pattern: 'Fast & Slow Pointers',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Clone Graph',\n    url: 'https://leetcode.com/problems/clone-graph/',\n    pattern: 'Graphs',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Course Schedule',\n    url: 'https://leetcode.com/problems/course-schedule/',\n    pattern: 'Graphs',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Pacific Atlantic Water Flow',\n    url: 'https://leetcode.com/problems/pacific-atlantic-water-flow/',\n    pattern: 'Graphs',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Number of Islands',\n    url: 'https://leetcode.com/problems/number-of-islands/',\n    pattern: 'Graphs',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Graph Valid Tree',\n    url: 'https://leetcode.com/problems/graph-valid-tree/',\n    pattern: 'Graphs',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Number of Connected Components in an Undirected Graph',\n    url:\n      'https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph/',\n    pattern: 'Graphs',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Reverse Linked List',\n    url: 'https://leetcode.com/problems/reverse-linked-list/',\n    pattern: 'In-place reversal of a linked list',\n    difficulty: 'Easy',\n    companies: [],\n  },\n  {\n    name: 'Reverse Linked List II',\n    url: 'https://leetcode.com/problems/reverse-linked-list-ii/',\n    pattern: 'In-place reversal of a linked list',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Rotate List',\n    url: 'https://leetcode.com/problems/rotate-list/',\n    pattern: 'In-place reversal of a linked list',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Swap Nodes in Pairs',\n    url: 'https://leetcode.com/problems/swap-nodes-in-pairs/',\n    pattern: 'In-place reversal of a linked list',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Odd Even Linked List',\n    url: 'https://leetcode.com/problems/odd-even-linked-list/',\n    pattern: 'In-place reversal of a linked list',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Reverse Nodes in k-Group',\n    url: 'https://leetcode.com/problems/reverse-nodes-in-k-group/',\n    pattern: 'In-place reversal of a linked list',\n    difficulty: 'Hard',\n    companies: [],\n  },\n  {\n    name: 'Merge Two Sorted Lists',\n    url: 'https://leetcode.com/problems/merge-two-sorted-lists/',\n    pattern: 'K-Way Merge',\n    difficulty: 'Easy',\n    companies: [],\n  },\n  {\n    name: 'Kth Smallest Element in a Sorted Matrix',\n    url:\n      'https://leetcode.com/problems/kth-smallest-element-in-a-sorted-matrix/',\n    pattern: 'K-Way Merge',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Find K Pairs with Smallest Sums',\n    url: 'https://leetcode.com/problems/find-k-pairs-with-smallest-sums/',\n    pattern: 'K-Way Merge',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Merge k Sorted Lists',\n    url: 'https://leetcode.com/problems/merge-k-sorted-lists/',\n    pattern: 'K-Way Merge',\n    difficulty: 'Hard',\n    companies: [],\n  },\n  {\n    name: 'Smallest Range Covering Elements from K Lists',\n    url:\n      'https://leetcode.com/problems/smallest-range-covering-elements-from-k-lists/',\n    pattern: 'K-Way Merge',\n    difficulty: 'Hard',\n    companies: [],\n  },\n  {\n    name: 'Meeting Rooms',\n    url: 'https://leetcode.com/problems/meeting-rooms',\n    pattern: 'Merge Intervals',\n    difficulty: 'Easy',\n    companies: [],\n  },\n  {\n    name: 'Merge Intervals',\n    url: 'https://leetcode.com/problems/merge-intervals/',\n    pattern: 'Merge Intervals',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Interval List Intersections',\n    url: 'https://leetcode.com/problems/interval-list-intersections/',\n    pattern: 'Merge Intervals',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Non-overlapping Intervals',\n    url: 'https://leetcode.com/problems/non-overlapping-intervals/',\n    pattern: 'Merge Intervals',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Meeting Rooms II',\n    url: 'https://leetcode.com/problems/meeting-rooms-ii/',\n    pattern: 'Merge Intervals',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Task Scheduler',\n    url: 'https://leetcode.com/problems/task-scheduler/',\n    pattern: 'Merge Intervals',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Minimum Number of Arrows to Burst Balloons',\n    url:\n      'https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons/',\n    pattern: 'Merge Intervals',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Insert Interval',\n    url: 'https://leetcode.com/problems/insert-interval/',\n    pattern: 'Merge Intervals',\n    difficulty: 'Hard',\n    companies: [],\n  },\n  {\n    name: 'Employee Free Time',\n    url: 'https://leetcode.com/problems/employee-free-time/',\n    pattern: 'Merge Intervals',\n    difficulty: 'Hard',\n    companies: [],\n  },\n  {\n    name: 'Binary Search',\n    url: 'https://leetcode.com/problems/binary-search/',\n    pattern: 'Modified Binary Search',\n    difficulty: 'Easy',\n    companies: [],\n  },\n  {\n    name: 'Find Smallest Letter Greater Than Target',\n    url:\n      'https://leetcode.com/problems/find-smallest-letter-greater-than-target/',\n    pattern: 'Modified Binary Search',\n    difficulty: 'Easy',\n    companies: [],\n  },\n  {\n    name: 'Peak Index in a Mountain Array',\n    url: 'https://leetcode.com/problems/peak-index-in-a-mountain-array/',\n    pattern: 'Modified Binary Search',\n    difficulty: 'Easy',\n    companies: [],\n  },\n  {\n    name: 'Find Minimum in Rotated Sorted Array',\n    url: 'https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/',\n    pattern: 'Modified Binary Search',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Find Peak Element',\n    url: 'https://leetcode.com/problems/find-peak-element/',\n    pattern: 'Modified Binary Search',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Search in Rotated Sorted Array',\n    url: 'https://leetcode.com/problems/search-in-rotated-sorted-array/',\n    pattern: 'Modified Binary Search',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Search in Rotated Sorted Array II',\n    url: 'https://leetcode.com/problems/search-in-rotated-sorted-array-ii/',\n    pattern: 'Modified Binary Search',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Search a 2D Matrix',\n    url: 'https://leetcode.com/problems/search-a-2d-matrix/',\n    pattern: 'Modified Binary Search',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Search a 2D Matrix II',\n    url: 'https://leetcode.com/problems/search-a-2d-matrix-ii/',\n    pattern: 'Modified Binary Search',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Count of Range Sum',\n    url: 'https://leetcode.com/problems/count-of-range-sum/',\n    pattern: 'Modified Binary Search',\n    difficulty: 'Hard',\n    companies: [],\n  },\n  {\n    name: 'Minimum Size Subarray Sum',\n    url: 'https://leetcode.com/problems/minimum-size-subarray-sum/',\n    pattern: 'Sliding Window',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Fruit Into Baskets',\n    url: 'https://leetcode.com/problems/fruit-into-baskets/',\n    pattern: 'Sliding Window',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Permutation in String',\n    url: 'https://leetcode.com/problems/permutation-in-string/',\n    pattern: 'Sliding Window',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Longest Repeating Character Replacement',\n    url:\n      'https://leetcode.com/problems/longest-repeating-character-replacement/',\n    pattern: 'Sliding Window',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Sliding Window Maximum',\n    url: 'https://leetcode.com/problems/sliding-window-maximum/',\n    pattern: 'Sliding Window',\n    difficulty: 'Hard',\n    companies: [],\n  },\n  {\n    name: 'Longest Substring Without Repeating Characters',\n    url:\n      'https://leetcode.com/problems/longest-substring-without-repeating-characters/',\n    pattern: 'Sliding Window',\n    difficulty: 'Hard',\n    companies: [],\n  },\n  {\n    name: 'Minimum Number of K Consecutive Bit Flips',\n    url:\n      'https://leetcode.com/problems/minimum-number-of-k-consecutive-bit-flips/',\n    pattern: 'Sliding Window',\n    difficulty: 'Hard',\n    companies: [],\n  },\n  {\n    name: 'Unique Letter String',\n    url: 'https://leetcode.com/problems/unique-letter-string/',\n    pattern: 'Sliding Window',\n    difficulty: 'Hard',\n    companies: [],\n  },\n  {\n    name: 'Minimum Window Substring',\n    url: 'https://leetcode.com/problems/minimum-window-substring/',\n    pattern: 'Sliding Window',\n    difficulty: 'Hard',\n    companies: [],\n  },\n  {\n    name: 'Substring with Concatenation of All Words',\n    url:\n      'https://leetcode.com/problems/substring-with-concatenation-of-all-words/',\n    pattern: 'Sliding Window',\n    difficulty: 'Hard',\n    companies: [],\n  },\n  {\n    name: 'Kth Smallest Element in a BST',\n    url: 'https://leetcode.com/problems/kth-smallest-element-in-a-bst/',\n    pattern: \"Top 'K' Elements\",\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'K Closest Points to Origin',\n    url: 'https://leetcode.com/problems/k-closest-points-to-origin/',\n    pattern: \"Top 'K' Elements\",\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Top K Frequent Elements',\n    url: 'https://leetcode.com/problems/top-k-frequent-elements/',\n    pattern: \"Top 'K' Elements\",\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Sort Characters By Frequency',\n    url: 'https://leetcode.com/problems/sort-characters-by-frequency/',\n    pattern: \"Top 'K' Elements\",\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Kth Largest Element in an Array',\n    url: 'https://leetcode.com/problems/kth-largest-element-in-an-array/',\n    pattern: \"Top 'K' Elements\",\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Find K Closest Elements',\n    url: 'https://leetcode.com/problems/find-k-closest-elements/',\n    pattern: \"Top 'K' Elements\",\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Reorganize String',\n    url: 'https://leetcode.com/problems/reorganize-string/',\n    pattern: \"Top 'K' Elements\",\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Rearrange String k Distance Apart',\n    url: 'https://leetcode.com/problems/rearrange-string-k-distance-apart',\n    pattern: \"Top 'K' Elements\",\n    difficulty: 'Hard',\n    companies: [],\n  },\n  {\n    name: 'Course Schedule III',\n    url: 'https://leetcode.com/problems/course-schedule-iii/',\n    pattern: \"Top 'K' Elements\",\n    difficulty: 'Hard',\n    companies: [],\n  },\n  {\n    name: 'Maximum Frequency Stack',\n    url: 'https://leetcode.com/problems/maximum-frequency-stack/',\n    pattern: \"Top 'K' Elements\",\n    difficulty: 'Hard',\n    companies: [],\n  },\n  {\n    name: 'Course Schedule',\n    url: 'https://leetcode.com/problems/course-schedule/',\n    pattern: 'Topological Sort',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Course Schedule II',\n    url: 'https://leetcode.com/problems/course-schedule-ii/',\n    pattern: 'Topological Sort',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Minimum Height Trees',\n    url: 'https://leetcode.com/problems/minimum-height-trees/',\n    pattern: 'Topological Sort',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Alien Dictionary',\n    url: 'https://leetcode.com/problems/alien-dictionary',\n    pattern: 'Topological Sort',\n    difficulty: 'Hard',\n    companies: [],\n  },\n  {\n    name: 'Sequence Reconstruction',\n    url: 'https://leetcode.com/problems/sequence-reconstruction',\n    pattern: 'Topological Sort',\n    difficulty: 'Hard',\n    companies: [],\n  },\n  {\n    name: 'Binary Tree Level Order Traversal II',\n    url: 'https://leetcode.com/problems/binary-tree-level-order-traversal-ii/',\n    pattern: 'Tree Breadth First Search',\n    difficulty: 'Easy',\n    companies: [],\n  },\n  {\n    name: 'Average of Levels in Binary Tree',\n    url: 'https://leetcode.com/problems/average-of-levels-in-binary-tree/',\n    pattern: 'Tree Breadth First Search',\n    difficulty: 'Easy',\n    companies: [],\n  },\n  {\n    name: 'Minimum Depth of Binary Tree',\n    url: 'https://leetcode.com/problems/minimum-depth-of-binary-tree/',\n    pattern: 'Tree Breadth First Search',\n    difficulty: 'Easy',\n    companies: [],\n  },\n  {\n    name: 'Binary Tree Level Order Traversal',\n    url: 'https://leetcode.com/problems/binary-tree-level-order-traversal/',\n    pattern: 'Tree Breadth First Search',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Binary Tree Zigzag Level Order Traversal',\n    url:\n      'https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/',\n    pattern: 'Tree Breadth First Search',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Populating Next Right Pointers in Each Node',\n    url:\n      'https://leetcode.com/problems/populating-next-right-pointers-in-each-node/',\n    pattern: 'Tree Breadth First Search',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Populating Next Right Pointers in Each Node II',\n    url:\n      'https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii/',\n    pattern: 'Tree Breadth First Search',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Binary Tree Right Side View',\n    url: 'https://leetcode.com/problems/binary-tree-right-side-view/',\n    pattern: 'Tree Breadth First Search',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Number of Islands',\n    url: 'https://leetcode.com/problems/number-of-islands/',\n    pattern: 'Tree Breadth First Search',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'All Nodes Distance K in Binary Tree',\n    url: 'https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree/',\n    pattern: 'Tree Breadth First Search',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Boundary of Binary Tree',\n    url: 'https://leetcode.com/problems/boundary-of-binary-tree',\n    pattern: 'Tree Breadth First Search',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Same Tree',\n    url: 'https://leetcode.com/problems/same-tree/',\n    pattern: 'Tree Depth First Search',\n    difficulty: 'Easy',\n    companies: [],\n  },\n  {\n    name: 'Path Sum',\n    url: 'https://leetcode.com/problems/path-sum/',\n    pattern: 'Tree Depth First Search',\n    difficulty: 'Easy',\n    companies: [],\n  },\n  {\n    name: 'Diameter of Binary Tree',\n    url: 'https://leetcode.com/problems/diameter-of-binary-tree/',\n    pattern: 'Tree Depth First Search',\n    difficulty: 'Easy',\n    companies: [],\n  },\n  {\n    name: 'Merge Two Binary Trees',\n    url: 'https://leetcode.com/problems/merge-two-binary-trees/',\n    pattern: 'Tree Depth First Search',\n    difficulty: 'Easy',\n    companies: [],\n  },\n  {\n    name: 'Maximum Depth of Binary Tree',\n    url: 'https://leetcode.com/problems/maximum-depth-of-binary-tree/',\n    pattern: 'Tree Depth First Search',\n    difficulty: 'Easy',\n    companies: [],\n  },\n  {\n    name: 'Lowest Common Ancestor of a Binary Search Tree',\n    url:\n      'https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/',\n    pattern: 'Tree Depth First Search',\n    difficulty: 'Easy',\n    companies: [],\n  },\n  {\n    name: 'Subtree of Another Tree',\n    url: 'https://leetcode.com/problems/subtree-of-another-tree/',\n    pattern: 'Tree Depth First Search',\n    difficulty: 'Easy',\n    companies: [],\n  },\n  {\n    name: 'Invert Binary Tree',\n    url: 'https://leetcode.com/problems/invert-binary-tree/',\n    pattern: 'Tree Depth First Search',\n    difficulty: 'Easy',\n    companies: [],\n  },\n  {\n    name: 'Path Sum II',\n    url: 'https://leetcode.com/problems/path-sum-ii/',\n    pattern: 'Tree Depth First Search',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Path Sum III',\n    url: 'https://leetcode.com/problems/path-sum-iii/',\n    pattern: 'Tree Depth First Search',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Lowest Common Ancestor of a Binary Tree',\n    url:\n      'https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/',\n    pattern: 'Tree Depth First Search',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Maximum Binary Tree',\n    url: 'https://leetcode.com/problems/maximum-binary-tree/',\n    pattern: 'Tree Depth First Search',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Maximum Width of Binary Tree',\n    url: 'https://leetcode.com/problems/maximum-width-of-binary-tree/',\n    pattern: 'Tree Depth First Search',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Construct Binary Tree from Preorder and Inorder Traversal',\n    url:\n      'https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/',\n    pattern: 'Tree Depth First Search',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Validate Binary Search Tree',\n    url: 'https://leetcode.com/problems/validate-binary-search-tree/',\n    pattern: 'Tree Depth First Search',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Kth Smallest Element in a BST',\n    url: 'https://leetcode.com/problems/kth-smallest-element-in-a-bst/',\n    pattern: 'Tree Depth First Search',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Implement Trie (Prefix Tree)',\n    url: 'https://leetcode.com/problems/implement-trie-prefix-tree/',\n    pattern: 'Tree Depth First Search',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Binary Tree Maximum Path Sum',\n    url: 'https://leetcode.com/problems/binary-tree-maximum-path-sum/',\n    pattern: 'Tree Depth First Search',\n    difficulty: 'Hard',\n    companies: [],\n  },\n  {\n    name: 'Serialize and Deserialize Binary Tree',\n    url: 'https://leetcode.com/problems/serialize-and-deserialize-binary-tree/',\n    pattern: 'Tree Depth First Search',\n    difficulty: 'Hard',\n    companies: [],\n  },\n  {\n    name: 'Word Search II',\n    url: 'https://leetcode.com/problems/word-search-ii/',\n    pattern: 'Tree Depth First Search',\n    difficulty: 'Hard',\n    companies: [],\n  },\n  {\n    name: 'Find Median from Data Stream',\n    url: 'https://leetcode.com/problems/find-median-from-data-stream/',\n    pattern: 'Two Heaps',\n    difficulty: 'Hard',\n    companies: [],\n  },\n  {\n    name: 'Sliding Window Median',\n    url: 'https://leetcode.com/problems/sliding-window-median/',\n    pattern: 'Two Heaps',\n    difficulty: 'Hard',\n    companies: [],\n  },\n  {\n    name: 'IPO',\n    url: 'https://leetcode.com/problems/ipo/',\n    pattern: 'Two Heaps',\n    difficulty: 'Hard',\n    companies: [],\n  },\n  {\n    name: 'Two Sum',\n    url: 'https://leetcode.com/problems/two-sum/',\n    pattern: 'Two Pointers',\n    difficulty: 'Easy',\n    companies: [],\n  },\n  {\n    name: 'Remove Duplicates from Sorted List',\n    url: 'https://leetcode.com/problems/remove-duplicates-from-sorted-list/',\n    pattern: 'Two Pointers',\n    difficulty: 'Easy',\n    companies: [],\n  },\n  {\n    name: 'Squares of a Sorted Array',\n    url: 'https://leetcode.com/problems/squares-of-a-sorted-array/',\n    pattern: 'Two Pointers',\n    difficulty: 'Easy',\n    companies: [],\n  },\n  {\n    name: 'Backspace String Compare',\n    url: 'https://leetcode.com/problems/backspace-string-compare',\n    pattern: 'Two Pointers',\n    difficulty: 'Easy',\n    companies: [],\n  },\n  {\n    name: '3 Sum',\n    url: 'https://leetcode.com/problems/3sum/',\n    pattern: 'Two Pointers',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: '3 Sum Closest',\n    url: 'https://leetcode.com/problems/3sum-closest/',\n    pattern: 'Two Pointers',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Subarrays with Product Less than K',\n    url: 'https://leetcode.com/problems/subarray-product-less-than-k/',\n    pattern: 'Two Pointers',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Sort Colours',\n    url: 'https://leetcode.com/problems/sort-colors/',\n    pattern: 'Two Pointers',\n    difficulty: 'Medium',\n    companies: [],\n  },\n  {\n    name: 'Minimum Window Substring',\n    url: 'https://leetcode.com/problems/minimum-window-substring/',\n    pattern: 'Two Pointers',\n    difficulty: 'Hard',\n    companies: [],\n  },\n  {\n    name: 'Trapping Rain Water',\n    url: 'https://leetcode.com/problems/trapping-rain-water/',\n    pattern: 'Two Pointers',\n    difficulty: 'Hard',\n    companies: [],\n  },\n  {\n    name: 'Container With Most Water',\n    url: 'https://leetcode.com/problems/container-with-most-water/',\n    pattern: 'Two Pointers',\n    difficulty: 'Hard',\n    companies: [],\n  },\n];\n","import React from 'react';\nimport { Container, Row, Col, Badge, NavLink } from 'reactstrap';\nimport TableView from './TableView';\n\nimport questionList from '../../data';\n\nimport './styles.scss';\n\nconst Table = () => {\n  const data = React.useMemo(() => questionList, []);\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'Sort questions by name or pattern!',\n        columns: [\n          {\n            Header: 'Name',\n            accessor: 'name',\n          },\n          {\n            Header: 'URL',\n            accessor: 'url',\n            Cell: cellInfo => (\n              <NavLink target=\"_blank\" href={cellInfo.row.original.url}>\n                {cellInfo.row.original.url}\n              </NavLink>\n            ),\n            disableSortBy: true,\n          },\n          {\n            Header: 'Pattern',\n            accessor: 'pattern',\n          },\n          {\n            Header: 'Difficulty',\n            accessor: 'difficulty',\n            disableSortBy: true,\n            Cell: cellInfo => (\n              <Badge\n                className={cellInfo.row.original.difficulty.toLowerCase()}\n                pill\n              >\n                {cellInfo.row.original.difficulty}\n              </Badge>\n            ),\n          },\n          {\n            Header: 'Companies',\n            accessor: 'companies',\n            disableSortBy: true,\n          },\n        ],\n      },\n    ],\n    [],\n  );\n\n  return (\n    <Container className=\"table\">\n      <Col>\n        <Row>\n          <Col>\n            <TableView columns={columns} data={data} />\n          </Col>\n        </Row>\n      </Col>\n    </Container>\n  );\n};\n\nexport default Table;\n","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\n\nimport './styles.scss';\n\nconst Tips = () => {\n  const input = `\n  \\`\\`\\`md\nIf input array is sorted then\n- Binary search\n- Two pointers\n\nIf asked for all permutations/subsets then\n- Backtracking\n\nIf given a tree then\n- DFS\n- BFS\n\nIf given a graph then\n- DFS\n- BFS\n\nIf given a linked list then\n- Two pointers\n\nIf recursion is banned then\n- Stack\n\nIf asked for maximum/minumum subarray/subset/options then\n- Dynamic programming\n\nIf asked for top/least K items then\n- Heap\n\nIf asked for common strings then\n- Map\n- Trie\n\nElse\n- Map/Set for O(1) time & O(n) space\n- Sort input for O(nlogn) time and O(1) space\n\\`\\`\\``;\n\n  return <ReactMarkdown className=\"tips\" source={input} />;\n};\n\nexport default Tips;\n","import React, { useState } from 'react';\nimport {\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Row,\n  Col,\n  Container,\n} from 'reactstrap';\nimport classnames from 'classnames';\n\nimport Table from '../Table';\nimport Tips from '../Tips';\n\nimport './styles.scss';\n\nconst Tabs = () => {\n  const [activeTab, setActiveTab] = useState('1');\n\n  const toggle = tab => {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n\n  return (\n    <Container>\n      <Nav tabs>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === '1' })}\n            onClick={() => {\n              toggle('1');\n            }}\n          >\n            Question List\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === '2' })}\n            onClick={() => {\n              toggle('2');\n            }}\n          >\n            Tips\n          </NavLink>\n        </NavItem>\n      </Nav>\n      <Container>\n        <TabContent activeTab={activeTab}>\n          <TabPane tabId=\"1\">\n            <Row>\n              <Col>\n                <Table />\n              </Col>\n            </Row>\n          </TabPane>\n          <TabPane tabId=\"2\">\n            <Row>\n              <Col>\n                <Tips />\n              </Col>\n            </Row>\n          </TabPane>\n        </TabContent>\n      </Container>\n    </Container>\n  );\n};\n\nexport default Tabs;\n","import React from 'react';\n\nimport './styles.scss';\n\nimport Navigation from './Navigation';\nimport Tabs from './Tabs';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navigation />\n      <Tabs />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}